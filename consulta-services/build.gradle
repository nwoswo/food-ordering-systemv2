plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.palantir.docker'
}


ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // üîÅ M√≥dulos internos compartidos
    implementation project(':common-libraries') // Librer√≠as comunes del monorepo

    // üåê Web y validaci√≥n
    implementation 'org.springframework.boot:spring-boot-starter-web' // Soporte para controladores REST y MVC
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validaci√≥n con Bean Validation (JSR-380)

    // üóÉÔ∏è Persistencia y migraciones
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Integraci√≥n con JPA/Hibernate
    implementation 'org.flywaydb:flyway-core' // Migraciones de base de datos
    implementation 'org.postgresql:postgresql' // Driver JDBC para PostgreSQL

    // üß™ Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Framework de pruebas para Spring Boot
    testImplementation 'org.springframework.kafka:spring-kafka-test' // Utilidades para testear Kafka

    // üßµ Kafka y mensajer√≠a
    implementation 'org.springframework.kafka:spring-kafka' // Integraci√≥n con Apache Kafka

    // üß† MapStruct para mapeo entre DTOs y entidades
    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // API de MapStruct
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // Procesador de anotaciones para generar mapeos

    // üß∞ Utilidades de desarrollo
    compileOnly 'org.projectlombok:lombok' // Anotaciones para reducir boilerplate (solo en compilaci√≥n)
    annotationProcessor 'org.projectlombok:lombok' // Procesador de anotaciones de Lombok

    // üìä Observabilidad y monitoreo
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Endpoints de salud, m√©tricas, etc.
}


bootJar {
    archiveBaseName = 'consulta-service'
    archiveVersion = '1.0.0'
}


docker {
    name "consulta-service:latest"
    dockerfile file('Dockerfile')
    files bootJar.archiveFile
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
    copySpec.into('build/libs')
}
