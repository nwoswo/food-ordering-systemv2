# ConfigMaps Consolidados para la Infraestructura Kafka
# Este archivo contiene todos los ConfigMaps necesarios para el despliegue
---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: kafka-infrastructure
---
# ConfigMap para PostgreSQL
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: kafka-infrastructure
data:
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "admin"
  POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-conf
  namespace: kafka-infrastructure
data:
  postgresql.conf: |
    # Configuración básica
    listen_addresses = '*'
    max_connections = 100
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 2
    max_parallel_workers_per_gather = 1
    max_parallel_workers = 2
    max_parallel_maintenance_workers = 1
    
    # Configuración CRÍTICA para Debezium
    wal_level = logical
    max_replication_slots = 10
    max_wal_senders = 10
    
    # Configuración adicional para replicación
    hot_standby = on
    archive_mode = off
    archive_command = ''
    # wal_keep_segments = 0
    max_logical_replication_workers = 4
    max_worker_processes = 10
---
# ConfigMap para Debezium Connector
apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-connector-config
  namespace: kafka-infrastructure
data:
  order-outbox-connector.json: |
    {
      "name": "order-outbox-connector",
      "config": {
        "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
        "database.hostname": "postgres.kafka-infrastructure.svc.cluster.local",
        "database.port": "5432",
        "database.user": "postgres",
        "database.password": "admin",
        "database.dbname": "postgres",
        "database.server.name": "order-service",
        "topic.prefix": "order-service",
        "database.schema.include.list": "orden",
        "table.include.list": "orden.outbox_events",
        "plugin.name": "pgoutput",
        "publication.autocreate.mode": "all_tables",
        "slot.name": "order_outbox_slot",
        "transforms": "outbox",
        "transforms.outbox.type": "io.debezium.transforms.outbox.EventRouter",
        "transforms.outbox.table.field.event.key": "aggregate_id",
        "transforms.outbox.table.field.event.payload": "event_data",
        "transforms.outbox.table.field.event.timestamp": "created_at",
        "transforms.outbox.table.field.event.type": "event_type",
        "transforms.outbox.table.field.event.id": "id",
        "transforms.outbox.route.by.field": "event_type",
        "transforms.outbox.route.topic.replacement": "order-${routedByValue}",
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable": "false",
        "value.converter.schemas.enable": "false",
        "offset.flush.interval.ms": "60000",
        "snapshot.mode": "initial",
        "snapshot.locking.mode": "minimal",
        "include.schema.changes": "false",
        "tombstones.on.delete": "false"
      }
    }
---
# ConfigMap para Kafka Connect Logging
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-config
  namespace: kafka-infrastructure
data:
  log4j.properties: |
    log4j.rootLogger=INFO, stdout
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
    # Disable all file-based appenders
    log4j.logger.kafka=INFO, stdout
    log4j.logger.org.apache.kafka=INFO, stdout
    log4j.logger.org.apache.kafka.clients.NetworkClient=WARN, stdout
    log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, stdout
    log4j.logger.state.change.logger=INFO, stdout
    log4j.logger.kafka.controller=INFO, stdout
    log4j.logger.kafka.request.logger=INFO, stdout
    log4j.logger.kafka.authorizer.logger=INFO, stdout
    log4j.logger.kafka.log.LogCleaner=INFO, stdout
    log4j.additivity.kafka=false
    log4j.additivity.org.apache.kafka=false
