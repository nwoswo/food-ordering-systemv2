apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-init-log4j-config
  namespace: kafka-infrastructure
data:
  log4j.properties: |
    log4j.rootLogger=INFO, stdout
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
    log4j.logger.org.apache.kafka.clients.NetworkClient=WARN
    log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG
    log.logger.state.change.logger=INFO
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-init
  namespace: kafka-infrastructure
spec:
  template:
    spec:
      containers:
      - name: kafka-init
        image: confluentinc/cp-kafka:7.4.0
        command:
        - /bin/bash
        - -c
        - |
          echo 'Waiting for Kafka to be ready...'
          cub kafka-ready -b kafka-broker-1:9092 1 30
          cub kafka-ready -b kafka-broker-2:9092 1 30
          cub kafka-ready -b kafka-broker-3:9092 1 30
          echo 'Deleting existing Kafka Connect topics...'
          kafka-topics --delete --topic connect-configs --bootstrap-server kafka-broker-1:9092 || true
          kafka-topics --delete --topic connect-offsets --bootstrap-server kafka-broker-1:9092 || true
          kafka-topics --delete --topic connect-status --bootstrap-server kafka-broker-1:9092 || true
          echo 'Creating Kafka Connect topics...'
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 1 --topic connect-configs --config min.insync.replicas=2 --config cleanup.policy=compact
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 25 --topic connect-offsets --config min.insync.replicas=2 --config cleanup.policy=compact
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 1 --topic connect-status --config min.insync.replicas=2 --config cleanup.policy=compact
          echo 'Creating application topics...'
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 3 --topic payment-request
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 3 --topic payment-response
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 3 --topic restaurant-approval-request
          kafka-topics --create --if-not-exists --bootstrap-server kafka-broker-1:9092 --replication-factor 3 --partitions 3 --topic restaurant-approval-response
          echo 'Topics created successfully!'
          kafka-topics --list --bootstrap-server kafka-broker-1:9092
        env:
        - name: KAFKA_LOG4J_ROOT_LOGLEVEL
          value: "INFO"
        - name: KAFKA_LOG4J_LOGGERS
          value: "org.apache.kafka.clients.NetworkClient=WARN,kafka.producer.async.DefaultEventHandler=DEBUG,state.change.logger=INFO"
        volumeMounts:
        - name: log4j-config
          mountPath: /etc/kafka/log4j.properties
          subPath: log4j.properties
      volumes:
      - name: log4j-config
        configMap:
          name: kafka-init-log4j-config
      restartPolicy: OnFailure
  backoffLimit: 3
