---
# Secret para PostgreSQL
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: kafka-infrastructure
type: Opaque
data:
  POSTGRES_PASSWORD: YWRtaW4=  # admin en base64
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc-new
  namespace: kafka-infrastructure
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
# PostgreSQL Deployment y Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: kafka-infrastructure
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      initContainers:
      - name: init-postgres
        image: postgres:15
        command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data && chmod -R 700 /var/lib/postgresql/data"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgres
        image: postgres:15
        args:
          - "-c"
          - "config_file=/etc/postgresql/postgresql.conf"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        # - name: POSTGRES_INITDB_ARGS
        #   valueFrom:
        #     configMapKeyRef:
        #       name: postgres-config
        #       key: POSTGRES_INITDB_ARGS
        # command: ["postgres", "-c", "wal_level=logical"]
        # volumeMounts:
        # - name: postgres-data
        #   mountPath: /var/lib/postgresql/data
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc-new
      - name: postgres-config
        configMap:
          name: postgres-config